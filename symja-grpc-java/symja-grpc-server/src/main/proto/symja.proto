syntax = "proto3";

option java_multiple_files = true;

package org.matheclipse.core.grpc;

message PBFraction { 
  PBInteger numerator = 1;
  PBInteger denominator = 2;
}

message PBInteger {
  bytes value = 1;
} 

message PBComplex {
  PBFraction re_value = 1;
  PBFraction im_value = 2;
}


message PBNum {
  double value = 1;
}

message PBComplexNum {
  double re_value = 1;
  double im_value = 2;
}
 
message PBBuiltinSymbol {
  enum ID { 
      Abort = 0;
    Abs = 1;
    AbsArg = 2;
    Accumulate = 3;
    AddTo = 4;
    AlgebraicNumber = 5;
    Algebraics = 6;
    All = 7;
    AllTrue = 8;
    Alternatives = 9;
    And = 10;
    AngleVector = 11;
    AntihermitianMatrixQ = 12;
    AntisymmetricMatrixQ = 13;
    AnyTrue = 14;
    Apart = 15;
    AppellF1 = 16;
    Append = 17;
    AppendTo = 18;
    Apply = 19;
    ArcCos = 20;
    ArcCosh = 21;
    ArcCot = 22;
    ArcCoth = 23;
    ArcCsc = 24;
    ArcCsch = 25;
    ArcSec = 26;
    ArcSech = 27;
    ArcSin = 28;
    ArcSinh = 29;
    ArcTan = 30;
    ArcTanh = 31;
    Arg = 32;
    Array = 33;
    ArrayDepth = 34;
    ArrayPad = 35;
    ArrayQ = 36;
    Assumptions = 37;
    AtomQ = 38;
    Attributes = 39;
    Automatic = 40;
    Axes = 41;
    AxesOrigin = 42;
    AxesStyle = 43;
    Background = 44;
    Begin = 45;
    BeginPackage = 46;
    BellB = 47;
    BellY = 48;
    BernoulliB = 49;
    BernoulliDistribution = 50;
    BesselI = 51;
    BesselJ = 52;
    BesselK = 53;
    BesselY = 54;
    Beta = 55;
    BetaRegularized = 56;
    BinCounts = 57;
    Binomial = 58;
    BinomialDistribution = 59;
    BitLength = 60;
    Blank = 61;
    Block = 62;
    Boole = 63;
    BooleanConvert = 64;
    BooleanMinimize = 65;
    BooleanQ = 66;
    BooleanTable = 67;
    BooleanVariables = 68;
    Booleans = 69;
    BrayCurtisDistance = 70;
    Break = 71;
    CDF = 72;
    CanberraDistance = 73;
    Cancel = 74;
    CarmichaelLambda = 75;
    CartesianProduct = 76;
    Cases = 77;
    Catalan = 78;
    CatalanNumber = 79;
    Catch = 80;
    Catenate = 81;
    Ceiling = 82;
    CentralMoment = 83;
    CharacterEncoding = 84;
    CharacteristicPolynomial = 85;
    ChebyshevT = 86;
    ChebyshevU = 87;
    ChessboardDistance = 88;
    ChineseRemainder = 89;
    CholeskyDecomposition = 90;
    Chop = 91;
    CirclePoints = 92;
    Clear = 93;
    ClearAll = 94;
    ClearAttributes = 95;
    Clip = 96;
    Coefficient = 97;
    CoefficientList = 98;
    CoefficientRules = 99;
    Collect = 100;
    Colon = 101;
    Commonest = 102;
    Compile = 103;
    Complement = 104;
    Complex = 105;
    ComplexExpand = 106;
    ComplexInfinity = 107;
    Complexes = 108;
    ComplexityFunction = 109;
    ComposeList = 110;
    ComposeSeries = 111;
    Composition = 112;
    CompoundExpression = 113;
    Condition = 114;
    ConditionalExpression = 115;
    Conjugate = 116;
    ConjugateTranspose = 117;
    Constant = 118;
    ConstantArray = 119;
    Continue = 120;
    ContinuedFraction = 121;
    ConvexHullMesh = 122;
    CoprimeQ = 123;
    Correlation = 124;
    Cos = 125;
    CosIntegral = 126;
    Cosh = 127;
    CoshIntegral = 128;
    CosineDistance = 129;
    Cot = 130;
    Coth = 131;
    Count = 132;
    Covariance = 133;
    Cross = 134;
    Csc = 135;
    Csch = 136;
    CubeRoot = 137;
    Curl = 138;
    D = 139;
    DSolve = 140;
    Decrement = 141;
    Default = 142;
    Defer = 143;
    Definition = 144;
    Degree = 145;
    Delete = 146;
    DeleteCases = 147;
    DeleteDuplicates = 148;
    Denominator = 149;
    Depth = 150;
    Derivative = 151;
    DesignMatrix = 152;
    Det = 153;
    Diagonal = 154;
    DiagonalMatrix = 155;
    DiceDissimilarity = 156;
    DigitQ = 157;
    Dimensions = 158;
    DiracDelta = 159;
    DirectedInfinity = 160;
    Direction = 161;
    DiscreteDelta = 162;
    DiscreteUniformDistribution = 163;
    Discriminant = 164;
    Disputed = 165;
    Distribute = 166;
    Distributed = 167;
    Divergence = 168;
    Divide = 169;
    DivideBy = 170;
    Divisible = 171;
    DivisorSigma = 172;
    Divisors = 173;
    Do = 174;
    Dot = 175;
    Drop = 176;
    E = 177;
    EasterSunday = 178;
    Eigenvalues = 179;
    Eigenvectors = 180;
    Element = 181;
    ElementData = 182;
    Eliminate = 183;
    EllipticE = 184;
    EllipticF = 185;
    EllipticK = 186;
    EllipticPi = 187;
    End = 188;
    EndPackage = 189;
    Equal = 190;
    Equivalent = 191;
    Erf = 192;
    Erfc = 193;
    Erfi = 194;
    ErlangDistribution = 195;
    EuclideanDistance = 196;
    EulerE = 197;
    EulerGamma = 198;
    EulerPhi = 199;
    EvenQ = 200;
    ExactNumberQ = 201;
    Except = 202;
    Exists = 203;
    Exp = 204;
    ExpIntegralE = 205;
    ExpIntegralEi = 206;
    Expand = 207;
    ExpandAll = 208;
    Expectation = 209;
    Exponent = 210;
    ExponentialDistribution = 211;
    Export = 212;
    ExtendedGCD = 213;
    Extract = 214;
    Factor = 215;
    FactorInteger = 216;
    FactorSquareFree = 217;
    FactorSquareFreeList = 218;
    FactorTerms = 219;
    Factorial = 220;
    Factorial2 = 221;
    False = 222;
    Fibonacci = 223;
    FindInstance = 224;
    FindRoot = 225;
    First = 226;
    Fit = 227;
    FixedPoint = 228;
    FixedPointList = 229;
    Flat = 230;
    Flatten = 231;
    FlattenAt = 232;
    Floor = 233;
    Fold = 234;
    FoldList = 235;
    For = 236;
    ForAll = 237;
    FourierMatrix = 238;
    FractionalPart = 239;
    FrechetDistribution = 240;
    FreeQ = 241;
    FresnelC = 242;
    FresnelS = 243;
    FrobeniusSolve = 244;
    FromCharacterCode = 245;
    FromContinuedFraction = 246;
    FromPolarCoordinates = 247;
    FullForm = 248;
    FullSimplify = 249;
    Function = 250;
    GCD = 251;
    Gamma = 252;
    GammaDistribution = 253;
    GammaRegularized = 254;
    Gather = 255;
    GegenbauerC = 256;
    GeometricDistribution = 257;
    GeometricMean = 258;
    Get = 259;
    Glaisher = 260;
    GoldenRatio = 261;
    Graphics = 262;
    Graphics3D = 263;
    Greater = 264;
    GreaterEqual = 265;
    GroebnerBasis = 266;
    GumbelDistribution = 267;
    HarmonicNumber = 268;
    Haversine = 269;
    Head = 270;
    HeavisideTheta = 271;
    HermiteH = 272;
    HermitianMatrixQ = 273;
    HilbertMatrix = 274;
    Hold = 275;
    HoldAll = 276;
    HoldFirst = 277;
    HoldForm = 278;
    HoldPattern = 279;
    HoldRest = 280;
    Horner = 281;
    HornerForm = 282;
    HurwitzZeta = 283;
    Hypergeometric1F1 = 284;
    Hypergeometric2F1 = 285;
    HypergeometricDistribution = 286;
    HypergeometricPFQ = 287;
    HypergeometricPFQRegularized = 288;
    I = 289;
    Identity = 290;
    IdentityMatrix = 291;
    If = 292;
    Im = 293;
    Implies = 294;
    Import = 295;
    Increment = 296;
    Indeterminate = 297;
    Inequality = 298;
    InexactNumberQ = 299;
    Infinity = 300;
    Information = 301;
    Inner = 302;
    Insert = 303;
    Integer = 304;
    IntegerExponent = 305;
    IntegerLength = 306;
    IntegerPart = 307;
    IntegerPartitions = 308;
    IntegerQ = 309;
    Integers = 310;
    Integrate = 311;
    InterpolatingFunction = 312;
    InterpolatingPolynomial = 313;
    Interpolation = 314;
    Intersection = 315;
    Interval = 316;
    Inverse = 317;
    InverseBetaRegularized = 318;
    InverseErf = 319;
    InverseErfc = 320;
    InverseFunction = 321;
    InverseGammaRegularized = 322;
    InverseHaversine = 323;
    InverseLaplaceTransform = 324;
    InverseSeries = 325;
    JaccardDissimilarity = 326;
    JacobiMatrix = 327;
    JacobiSymbol = 328;
    JacobiZeta = 329;
    JavaForm = 330;
    Join = 331;
    KOrderlessPartitions = 332;
    KPartitions = 333;
    Khinchin = 334;
    KroneckerDelta = 335;
    Kurtosis = 336;
    LCM = 337;
    LUDecomposition = 338;
    LaguerreL = 339;
    LaplaceTransform = 340;
    Last = 341;
    LeafCount = 342;
    LeastSquares = 343;
    LegendreP = 344;
    LegendreQ = 345;
    Length = 346;
    Less = 347;
    LessEqual = 348;
    LetterQ = 349;
    Level = 350;
    LevelQ = 351;
    Limit = 352;
    Line = 353;
    LinearModelFit = 354;
    LinearProgramming = 355;
    LinearSolve = 356;
    LiouvilleLambda = 357;
    List = 358;
    ListConvolve = 359;
    ListCorrelate = 360;
    ListQ = 361;
    Listable = 362;
    Literal = 363;
    Log = 364;
    Log10 = 365;
    Log2 = 366;
    LogGamma = 367;
    LogIntegral = 368;
    LogNormalDistribution = 369;
    LogicalExpand = 370;
    LogisticSigmoid = 371;
    LowerCaseQ = 372;
    LowerTriangularize = 373;
    LucasL = 374;
    MachineNumberQ = 375;
    MangoldtLambda = 376;
    ManhattanDistance = 377;
    MantissaExponent = 378;
    Map = 379;
    MapAll = 380;
    MapAt = 381;
    MapThread = 382;
    MatchQ = 383;
    MatchingDissimilarity = 384;
    MathMLForm = 385;
    MatrixForm = 386;
    MatrixMinimalPolynomial = 387;
    MatrixPower = 388;
    MatrixQ = 389;
    MatrixRank = 390;
    Max = 391;
    MaxIterations = 392;
    MaxPoints = 393;
    Mean = 394;
    MeanDeviation = 395;
    Median = 396;
    MeijerG = 397;
    MemberQ = 398;
    MersennePrimeExponent = 399;
    MersennePrimeExponentQ = 400;
    MeshRange = 401;
    MessageName = 402;
    Method = 403;
    Min = 404;
    MinimalPolynomial = 405;
    Minus = 406;
    Missing = 407;
    MissingQ = 408;
    Mod = 409;
    Module = 410;
    Modulus = 411;
    MoebiusMu = 412;
    MonomialList = 413;
    Most = 414;
    Multinomial = 415;
    MultiplicativeOrder = 416;
    N = 417;
    NDSolve = 418;
    NFourierTransform = 419;
    NHoldAll = 420;
    NHoldFirst = 421;
    NHoldRest = 422;
    NIntegrate = 423;
    NMaximize = 424;
    NMinimize = 425;
    NRoots = 426;
    NSolve = 427;
    NakagamiDistribution = 428;
    Names = 429;
    Nand = 430;
    Nearest = 431;
    Negative = 432;
    Nest = 433;
    NestList = 434;
    NestWhile = 435;
    NestWhileList = 436;
    NextPrime = 437;
    NonCommutativeMultiply = 438;
    NonNegative = 439;
    NonPositive = 440;
    None = 441;
    NoneTrue = 442;
    Nonexistent = 443;
    Nor = 444;
    Norm = 445;
    Normal = 446;
    NormalDistribution = 447;
    Normalize = 448;
    Not = 449;
    NotApplicable = 450;
    NotAvailable = 451;
    NotListQ = 452;
    Null = 453;
    NullSpace = 454;
    NumberFieldRootsOfUnity = 455;
    NumberQ = 456;
    Numerator = 457;
    NumericFunction = 458;
    NumericQ = 459;
    O = 460;
    OddQ = 461;
    OneIdentity = 462;
    Operate = 463;
    Optional = 464;
    Options = 465;
    Or = 466;
    Order = 467;
    OrderedQ = 468;
    Ordering = 469;
    Orderless = 470;
    OrthogonalMatrixQ = 471;
    Orthogonalize = 472;
    Out = 473;
    Outer = 474;
    PDF = 475;
    Package = 476;
    PadLeft = 477;
    PadRight = 478;
    ParametricPlot = 479;
    Part = 480;
    Partition = 481;
    PartitionsP = 482;
    PartitionsQ = 483;
    Pattern = 484;
    PatternTest = 485;
    PerfectNumber = 486;
    PerfectNumberQ = 487;
    Permutations = 488;
    Pi = 489;
    Piecewise = 490;
    Plot = 491;
    Plot3D = 492;
    PlotRange = 493;
    Plus = 494;
    Pochhammer = 495;
    Point = 496;
    PoissonDistribution = 497;
    PolyGamma = 498;
    PolyLog = 499;
    Polygon = 500;
    PolynomialExtendedGCD = 501;
    PolynomialGCD = 502;
    PolynomialLCM = 503;
    PolynomialQ = 504;
    PolynomialQuotient = 505;
    PolynomialQuotientRemainder = 506;
    PolynomialRemainder = 507;
    Position = 508;
    Positive = 509;
    PossibleZeroQ = 510;
    Power = 511;
    PowerExpand = 512;
    PowerMod = 513;
    PreDecrement = 514;
    PreIncrement = 515;
    PrePlus = 516;
    Precision = 517;
    PrecisionGoal = 518;
    Prepend = 519;
    PrependTo = 520;
    Prime = 521;
    PrimeOmega = 522;
    PrimePi = 523;
    PrimePowerQ = 524;
    PrimeQ = 525;
    Primes = 526;
    PrimitiveRootList = 527;
    Print = 528;
    Product = 529;
    ProductLog = 530;
    Projection = 531;
    PseudoInverse = 532;
    Put = 533;
    QRDecomposition = 534;
    Quantile = 535;
    Quiet = 536;
    Quit = 537;
    Quotient = 538;
    QuotientRemainder = 539;
    RandomChoice = 540;
    RandomInteger = 541;
    RandomReal = 542;
    RandomSample = 543;
    RandomVariate = 544;
    Range = 545;
    Rational = 546;
    Rationalize = 547;
    Rationals = 548;
    Re = 549;
    Real = 550;
    RealNumberQ = 551;
    Reals = 552;
    Reap = 553;
    Rectangle = 554;
    Reduce = 555;
    Refine = 556;
    Repeated = 557;
    RepeatedNull = 558;
    Replace = 559;
    ReplaceAll = 560;
    ReplaceList = 561;
    ReplacePart = 562;
    ReplaceRepeated = 563;
    Rest = 564;
    Resultant = 565;
    Return = 566;
    Reverse = 567;
    Riffle = 568;
    RogersTanimotoDissimilarity = 569;
    Root = 570;
    RootIntervals = 571;
    RootOf = 572;
    Roots = 573;
    RotateLeft = 574;
    RotateRight = 575;
    Round = 576;
    RowReduce = 577;
    Rule = 578;
    RuleDelayed = 579;
    RussellRaoDissimilarity = 580;
    SameQ = 581;
    SatisfiabilityCount = 582;
    SatisfiabilityInstances = 583;
    SatisfiableQ = 584;
    Scan = 585;
    Sec = 586;
    Sech = 587;
    Second = 588;
    Select = 589;
    Sequence = 590;
    Series = 591;
    SeriesCoefficient = 592;
    SeriesData = 593;
    Set = 594;
    SetAttributes = 595;
    SetDelayed = 596;
    Share = 597;
    Show = 598;
    Sign = 599;
    SignCmp = 600;
    Simplify = 601;
    Sin = 602;
    SinIntegral = 603;
    Sinc = 604;
    SingularValueDecomposition = 605;
    Sinh = 606;
    SinhIntegral = 607;
    Skewness = 608;
    Slot = 609;
    SlotSequence = 610;
    SokalSneathDissimilarity = 611;
    Solve = 612;
    Sort = 613;
    Sow = 614;
    Span = 615;
    Split = 616;
    SplitBy = 617;
    Sqrt = 618;
    SquareFreeQ = 619;
    SquaredEuclideanDistance = 620;
    StandardDeviation = 621;
    Standardize = 622;
    StieltjesGamma = 623;
    StirlingS1 = 624;
    StirlingS2 = 625;
    String = 626;
    StringDrop = 627;
    StringJoin = 628;
    StringLength = 629;
    StringTake = 630;
    StruveH = 631;
    StruveL = 632;
    StudentTDistribution = 633;
    Subfactorial = 634;
    Subscript = 635;
    Subsets = 636;
    Subsuperscript = 637;
    Subtract = 638;
    SubtractFrom = 639;
    Sum = 640;
    Superscript = 641;
    Surd = 642;
    SurfaceGraphics = 643;
    Switch = 644;
    Symbol = 645;
    SymbolName = 646;
    SymbolQ = 647;
    SymmetricMatrixQ = 648;
    SyntaxLength = 649;
    SyntaxQ = 650;
    Table = 651;
    Take = 652;
    Tally = 653;
    Tan = 654;
    Tanh = 655;
    TautologyQ = 656;
    Taylor = 657;
    TeXForm = 658;
    TensorDimensions = 659;
    TensorProduct = 660;
    TensorRank = 661;
    Thread = 662;
    Through = 663;
    Throw = 664;
    TimeConstrained = 665;
    Times = 666;
    TimesBy = 667;
    Timing = 668;
    ToCharacterCode = 669;
    ToPolarCoordinates = 670;
    ToRadicals = 671;
    ToString = 672;
    ToUnicode = 673;
    ToeplitzMatrix = 674;
    Together = 675;
    TooLarge = 676;
    Total = 677;
    Tr = 678;
    Trace = 679;
    Transpose = 680;
    Trig = 681;
    TrigExpand = 682;
    TrigReduce = 683;
    TrigToExp = 684;
    True = 685;
    TrueQ = 686;
    Tuples = 687;
    Undefined = 688;
    Unequal = 689;
    Unevaluated = 690;
    Union = 691;
    Unique = 692;
    UnitStep = 693;
    UnitVector = 694;
    UnitaryMatrixQ = 695;
    Unitize = 696;
    Unknown = 697;
    UnsameQ = 698;
    Unset = 699;
    UpSet = 700;
    UpSetDelayed = 701;
    UpperCaseQ = 702;
    UpperTriangularize = 703;
    ValueQ = 704;
    VandermondeMatrix = 705;
    Variable = 706;
    Variables = 707;
    Variance = 708;
    VectorAngle = 709;
    VectorQ = 710;
    WeibullDistribution = 711;
    Which = 712;
    While = 713;
    White = 714;
    With = 715;
    Xor = 716;
    YuleDissimilarity = 717;
    Zeta = 718;
  }
  ID id = 1;
}

message PBSymbol {
  string name = 1;
}

message PBString {
  string content = 1;
}

message PBPattern {
  bool default_value = 1;
  PBExpr condition = 2;
  PBExpr default = 3;
  PBSymbol symbol = 4;
}

message PBExpr {
  oneof atom {
     PBAST ast = 1;
     PBBuiltinSymbol symbol = 2;
     PBSymbol identifier = 3;
     PBInteger big_integer = 4;
     PBFraction big_fraction = 5;
     PBComplex big_complex = 6;
     PBNum numeric = 7;
     PBComplexNum complex_numeric = 8; 
     PBPattern pattern = 9;
     PBString str = 10;
  }
}

message PBAST {
  PBExpr head = 1;
  repeated PBExpr arg = 2;
}

service SymjaService {
    rpc eval(PBExpr) returns (PBExpr);
}